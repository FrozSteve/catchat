"use strict";

exports.__esModule = true;
exports.updateJoinedMembers = exports.updateInvitedMembers = exports.updateConfr = exports.setUidToUserId = exports.setCallStatus = exports.setCallDuration = exports["default"] = exports.counterSlice = exports.changeWinSize = exports.CALLSTATUS = void 0;

var _toolkit = require("@reduxjs/toolkit");

var CALLSTATUS = {
  idle: 0,
  inviting: 1,
  alerting: 2,
  confirmRing: 3,
  // caller
  receivedConfirmRing: 4,
  // callee
  answerCall: 5,
  receivedAnswerCall: 6,
  confirmCallee: 7
};
exports.CALLSTATUS = CALLSTATUS;
var counterSlice = (0, _toolkit.createSlice)({
  name: 'call',
  initialState: {
    callStatus: CALLSTATUS.idle,
    windowSize: 'normal',
    callDuration: '00:00',
    confr: {
      channel: '',
      token: '',
      type: null,
      callId: null,
      callerDevId: null,
      calleeDevId: null,
      confrName: '',
      callerIMName: '',
      calleeIMName: ''
    },
    groupId: '',
    groupName: '',
    uid2userId: {},
    joinedMembers: [],
    invitedMembers: []
  },
  reducers: {
    changeWinSize: function changeWinSize(state, action) {
      state.windowSize = action.payload;
    },
    setCallStatus: function setCallStatus(state, action) {
      state.callStatus = action.payload;
    },
    setCallDuration: function setCallDuration(state, action) {
      state.callDuration = action.payload;
    },
    updateConfr: function updateConfr(state, action) {
      var msg = action.payload;
      var confrInfo = action.payload.ext || {}; // let confrInfo = msg.customExts || {}

      var groupId;
      var gName;
      var confr = {
        channel: confrInfo.channelName,
        token: confrInfo.token,
        type: confrInfo.type,
        callId: confrInfo.callId,
        callerDevId: confrInfo.callerDevId,
        calleeDevId: confrInfo.calleeDevId
      };

      if (confrInfo.type === 2 || confrInfo.type === 3) {
        confr.confrName = msg.to;
      } else {
        confr.confrName = msg.from;
      }

      if (confrInfo.calleeIMName) {
        confr.calleeIMName = confrInfo.calleeIMName;
      }

      if (confrInfo.callerIMName) {
        confr.callerIMName = confrInfo.callerIMName;
      }

      if (confrInfo.ext) {
        groupId = confrInfo.ext.groupId;
        gName = confrInfo.ext.groupName;
      }

      state.groupName = gName;
      state.groupId = groupId;
      state.confr = confr;
    },
    setUidToUserId: function setUidToUserId(state, action) {
      state.uid2userId = action.payload;
    },
    updateJoinedMembers: function updateJoinedMembers(state, action, oth) {
      var actionType = action.payload.action;

      if (actionType === 'add') {
        var exist = false;
        var joinedMembers = [].concat(state.joinedMembers);
        joinedMembers.forEach(function (item, index) {
          if (item.name === action.payload.name || item.value === action.payload.name) {
            item.videoElm = action.payload.videoElm;
            item.mediaType = action.payload.mediaType;
            item.audio = action.payload.audio || false;
            item.video = action.payload.video || false;
            item.isSelf = action.payload.isSelf;
            state.joinedMembers = joinedMembers;
            exist = true;
          }
        });

        if (!exist) {
          delete action.payload.action;
          joinedMembers.push(action.payload);
          state.joinedMembers = joinedMembers;
        }
      } else {
        state.joinedMembers = action.payload;
      }
    },
    updateInvitedMembers: function updateInvitedMembers(state, action) {
      state.invitedMembers = action.payload;
    }
  }
});
exports.counterSlice = counterSlice;
var _counterSlice$actions = counterSlice.actions,
    changeWinSize = _counterSlice$actions.changeWinSize,
    setCallStatus = _counterSlice$actions.setCallStatus,
    setCallDuration = _counterSlice$actions.setCallDuration,
    updateConfr = _counterSlice$actions.updateConfr,
    setUidToUserId = _counterSlice$actions.setUidToUserId,
    updateJoinedMembers = _counterSlice$actions.updateJoinedMembers,
    updateInvitedMembers = _counterSlice$actions.updateInvitedMembers;
exports.updateInvitedMembers = updateInvitedMembers;
exports.updateJoinedMembers = updateJoinedMembers;
exports.setUidToUserId = setUidToUserId;
exports.updateConfr = updateConfr;
exports.setCallDuration = setCallDuration;
exports.setCallStatus = setCallStatus;
exports.changeWinSize = changeWinSize;
var _default = counterSlice.reducer;
exports["default"] = _default;