"use strict";

exports.__esModule = true;
exports["default"] = void 0;

require("./index.css");

var _react = _interopRequireDefault(require("react"));

var _Icon = _interopRequireDefault(require("../../components/Icon"));

var _reactRedux = require("react-redux");

var _reducer = require("../../redux/reducer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function Header(props) {
  var dispatch = (0, _reactRedux.useDispatch)();
  var currentSize = (0, _reactRedux.useSelector)(function (state) {
    return state.windowSize;
  });
  var confr = (0, _reactRedux.useSelector)(function (state) {
    return state.confr;
  });
  var state = (0, _reactRedux.useSelector)(function (state) {
    return state;
  });
  var isGroup = confr.type === 2 || confr.type === 3;

  var onZoomWindow = function onZoomWindow() {
    var nextSize = currentSize === 'normal' ? 'large' : 'normal';
    dispatch((0, _reducer.changeWinSize)(nextSize));
  };

  var handleClose = function handleClose() {
    dispatch((0, _reducer.changeWinSize)('mini'));
  };

  var onAddPerson = function onAddPerson() {
    var confrData = Object.assign({}, confr);
    confrData.groupId = state.groupId;
    confrData.groupName = state.groupName;
    var joinedMembers = [].concat(state.joinedMembers);
    confrData.joinedMembers = joinedMembers.map(function (item) {
      return {
        imUserId: item.name,
        agoraUid: item.value
      };
    });
    props.onAddPerson && props.onAddPerson(confrData);
  };

  var headTitle = confr.type === 0 || confr.type === 3 ? 'Audio Call' : 'Video Call';
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: "callkit-header-cantainer"
  }, /*#__PURE__*/_react["default"].createElement("span", {
    className: "callkit-header-name"
  }, headTitle), /*#__PURE__*/_react["default"].createElement("div", {
    className: "callkit-header-contral"
  }, isGroup && /*#__PURE__*/_react["default"].createElement("span", {
    onClick: onAddPerson
  }, /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
    className: "iconfont icon-add_person icon-style"
  })), currentSize === 'normal' ? /*#__PURE__*/_react["default"].createElement("span", {
    onClick: onZoomWindow
  }, /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
    className: "iconfont icon-a-4_arrows_separation icon-style"
  })) : currentSize === 'large' ? /*#__PURE__*/_react["default"].createElement("span", {
    onClick: onZoomWindow
  }, /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
    className: "iconfont icon-a-4_arrows_gathering icon-style"
  })) : null, /*#__PURE__*/_react["default"].createElement("span", {
    onClick: handleClose
  }, /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
    className: "iconfont icon-x icon-style"
  }))));
}

var _default = Header;
exports["default"] = _default;
module.exports = exports.default;