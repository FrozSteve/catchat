"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactDraggable = _interopRequireDefault(require("react-draggable"));

var _header = _interopRequireDefault(require("./header"));

var _main = _interopRequireDefault(require("./main"));

require("./index.css");

var _reactRedux = require("react-redux");

var _classnames = _interopRequireDefault(require("classnames"));

var _miniWindow = _interopRequireDefault(require("../modules/miniWindow"));

var _reducer = require("../redux/reducer");

var _index2 = require("../index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Layout(_ref) {
  var onAddPerson = _ref.onAddPerson,
      onStateChange = _ref.onStateChange,
      onInvite = _ref.onInvite;
  var CallkitProps = (0, _react.useContext)(_index2.CallkitContext);
  var confr = (0, _reactRedux.useSelector)(function (state) {
    return state.confr;
  });
  var size = (0, _reactRedux.useSelector)(function (state) {
    return state.windowSize;
  });
  var callStatus = (0, _reactRedux.useSelector)(function (state) {
    return state.callStatus;
  });
  var cls = (0, _classnames["default"])('callkit-layout-cantainer', {
    'callkit-layout-large': size === 'large',
    'callkit-layout-displaynone': size === 'mini'
  });
  var miniCls = (0, _classnames["default"])({
    'callkit-layout-displaynone': size !== 'mini'
  });
  var position = size === 'large' ? {
    x: 0,
    y: 0
  } : null;

  var addPerson = function addPerson(confr) {
    onAddPerson && onAddPerson(confr);
  };

  var audio = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    if (callStatus === _reducer.CALLSTATUS.alerting) {
      onInvite && onInvite(confr);

      if (!CallkitProps.ringingSource) {
        console.warn('no ringing source.');
        return;
      }

      audio.current = new Audio();
      audio.current.muted = "muted";
      audio.current.src = CallkitProps.ringingSource;
      audio.current.play();
      audio.current.muted = false;

      audio.current.onended = function () {
        audio.current.load();
        audio.current.play();
      };
    } else if (callStatus != _reducer.CALLSTATUS.receivedConfirmRing) {
      if (!audio.current) return;
      audio.current.pause();
      audio.current.src = null;
      audio.current.load();
    }
  }, [callStatus]);
  return callStatus > _reducer.CALLSTATUS.idle ? /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_reactDraggable["default"], {
    position: position
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: cls
  }, /*#__PURE__*/_react["default"].createElement(_header["default"], {
    onAddPerson: addPerson
  }), /*#__PURE__*/_react["default"].createElement(_main["default"], null))), /*#__PURE__*/_react["default"].createElement(_miniWindow["default"], {
    className: miniCls
  })) : null;
}

var _default = Layout;
exports["default"] = _default;
module.exports = exports.default;