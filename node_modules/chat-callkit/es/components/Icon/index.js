var _excluded = ["className", "spin", "style", "children"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import './index.css';
import classnames from 'classnames';
import React from 'react';

function Icon(props) {
  var className = props.className,
      spin = props.spin,
      style = props.style,
      children = props.children,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = classnames(className, {
    'callkit-component-icon': true,
    'icon-spin': !!spin
  });
  return /*#__PURE__*/React.createElement("i", _extends({
    className: cls,
    style: style
  }, other), children);
}

export default Icon;