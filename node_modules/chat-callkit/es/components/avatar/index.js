var _excluded = ["src", "alt", "className"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import './index.css';
import classnames from 'classnames';
import React from 'react';

function Avatar(props) {
  var src = props.src,
      alt = props.alt,
      className = props.className,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = classnames('callkit-component-avatar', className);
  return /*#__PURE__*/React.createElement("div", _extends({
    className: cls
  }, others), /*#__PURE__*/React.createElement("img", {
    src: src,
    alt: alt,
    draggable: false
  }));
}

export default Avatar;