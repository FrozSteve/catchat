var _excluded = ["className", "circle", "children", "right", "danger", "primary"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import './index.css';
import classnames from 'classnames';
import React from 'react';

function Button(props) {
  var className = props.className,
      circle = props.circle,
      children = props.children,
      right = props.right,
      danger = props.danger,
      primary = props.primary,
      others = _objectWithoutPropertiesLoose(props, _excluded);

  var cls = classnames('callkit-component-button', {
    'callkit-component-button-circle': !!circle,
    'callkit-root-button-right': !!right,
    'callkit-root-button-danger': !!danger,
    'callkit-root-button-primary': !!primary,
    'callkit-root-button-default': !primary && !danger && !right
  }, className);
  return /*#__PURE__*/React.createElement("button", _extends({
    className: cls
  }, others), children);
}

export default Button;