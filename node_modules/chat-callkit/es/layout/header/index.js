import './index.css';
import React from 'react';
import Icon from '../../components/Icon';
import { useSelector, useDispatch } from 'react-redux';
import { changeWinSize } from '../../redux/reducer';

function Header(props) {
  var dispatch = useDispatch();
  var currentSize = useSelector(function (state) {
    return state.windowSize;
  });
  var confr = useSelector(function (state) {
    return state.confr;
  });
  var state = useSelector(function (state) {
    return state;
  });
  var isGroup = confr.type === 2 || confr.type === 3;

  var onZoomWindow = function onZoomWindow() {
    var nextSize = currentSize === 'normal' ? 'large' : 'normal';
    dispatch(changeWinSize(nextSize));
  };

  var handleClose = function handleClose() {
    dispatch(changeWinSize('mini'));
  };

  var onAddPerson = function onAddPerson() {
    var confrData = Object.assign({}, confr);
    confrData.groupId = state.groupId;
    confrData.groupName = state.groupName;
    var joinedMembers = [].concat(state.joinedMembers);
    confrData.joinedMembers = joinedMembers.map(function (item) {
      return {
        imUserId: item.name,
        agoraUid: item.value
      };
    });
    props.onAddPerson && props.onAddPerson(confrData);
  };

  var headTitle = confr.type === 0 || confr.type === 3 ? 'Audio Call' : 'Video Call';
  return /*#__PURE__*/React.createElement("div", {
    className: "callkit-header-cantainer"
  }, /*#__PURE__*/React.createElement("span", {
    className: "callkit-header-name"
  }, headTitle), /*#__PURE__*/React.createElement("div", {
    className: "callkit-header-contral"
  }, isGroup && /*#__PURE__*/React.createElement("span", {
    onClick: onAddPerson
  }, /*#__PURE__*/React.createElement(Icon, {
    className: "iconfont icon-add_person icon-style"
  })), currentSize === 'normal' ? /*#__PURE__*/React.createElement("span", {
    onClick: onZoomWindow
  }, /*#__PURE__*/React.createElement(Icon, {
    className: "iconfont icon-a-4_arrows_separation icon-style"
  })) : currentSize === 'large' ? /*#__PURE__*/React.createElement("span", {
    onClick: onZoomWindow
  }, /*#__PURE__*/React.createElement(Icon, {
    className: "iconfont icon-a-4_arrows_gathering icon-style"
  })) : null, /*#__PURE__*/React.createElement("span", {
    onClick: handleClose
  }, /*#__PURE__*/React.createElement(Icon, {
    className: "iconfont icon-x icon-style"
  }))));
}

export default Header;