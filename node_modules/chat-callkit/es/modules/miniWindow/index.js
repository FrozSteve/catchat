import './index.css';
import Avatar from '../../components/avatar';
import head from '../../assets/images/head.png';
import classnames from 'classnames';
import React, { useEffect, useContext } from 'react';
import Draggable, { DraggableCore } from 'react-draggable';
import { useSelector, useDispatch } from 'react-redux';
import { changeWinSize, CALLSTATUS } from '../../redux/reducer';
import { WebIM } from '../callManager';
import { CallkitContext } from '../../index';

function MiniWindow(props) {
  var className = props.className;
  var dispatch = useDispatch();
  var state = useSelector(function (state) {
    return state;
  });
  var callDuration = state.callDuration,
      callStatus = state.callStatus,
      confr = state.confr;
  var isVideo = confr.type === 1;
  var text = callStatus < CALLSTATUS.answerCall ? 'Calling' : callDuration;
  var CallkitProps = useContext(CallkitContext);
  var contactAvatar = CallkitProps.contactAvatar,
      groupAvatar = CallkitProps.groupAvatar;
  var cls = classnames(className, {
    'callkit-miniwin-container': true,
    'callkit-miniwin-minivideo': isVideo
  });
  var temp;

  var handleStart = function handleStart() {
    temp = Date.now();
  };

  var handleStop = function handleStop() {
    var current = Date.now();

    if (current - temp < 300) {
      dispatch(changeWinSize('normal'));
    }
  };

  useEffect(function () {
    if (confr.type !== 1) return;

    if (state.windowSize === 'mini') {
      WebIM.rtc.remoteVideoTrack && WebIM.rtc.remoteVideoTrack.play('mini-player');
    }

    return function () {
      WebIM.rtc.remoteVideoTrack && WebIM.rtc.remoteVideoTrack.play('remote-player');
    };
  }, [state.windowSize]);
  var avater;

  if (confr.type > 1) {
    avater = groupAvatar ? groupAvatar : head;
  } else {
    avater = contactAvatar ? contactAvatar : head;
  }

  var content = isVideo ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("div", {
    id: "mini-player",
    className: "callkit-miniwin-video"
  }), /*#__PURE__*/React.createElement("div", {
    className: "callkit-miniwin-video-text"
  }, text)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Avatar, {
    style: {
      borderRadius: groupAvatar ? 'inherit' : '50%'
    },
    src: avater,
    className: "callkit-miniwin-avatar"
  }), /*#__PURE__*/React.createElement("span", {
    className: "callkit-miniwin-text"
  }, text));
  return /*#__PURE__*/React.createElement(Draggable, {
    onStart: handleStart,
    onStop: handleStop
  }, /*#__PURE__*/React.createElement("div", {
    className: cls
  }, content));
}

export default MiniWindow;