import React, { memo } from 'react';
import { makeStyles } from "@material-ui/styles";
import { emoji } from '../../../common/emoji';
import { Button } from '@material-ui/core';
import Popover from '@material-ui/core/Popover';
var useStyles = makeStyles(function () {
  return {
    emojiBox: {
      width: function width(props) {
        return props.width + 'px';
      },
      height: function height(props) {
        return props.height + 'px';
      },
      display: 'flex',
      flexWrap: 'wrap',
      padding: '16px'
    },
    myselfPopover: {
      '& .MuiPopover-paper': {
        borderRadius: '12px',
        backdropFilter: 'blur(12px)',
        background: 'rgba(255,255,255,.8)'
      }
    }
  };
});
var lineNum = 10;
var emojiWidth = 25;
var emojiPadding = 5;

function Emoji(_ref) {
  var anchorEl = _ref.anchorEl,
      onClose = _ref.onClose,
      onSelected = _ref.onSelected;
  var emojisNum = Object.values(emoji.map).length;
  var rows = Math.ceil(emojisNum / lineNum);
  var width = (emojiWidth + 2 * emojiPadding) * lineNum;
  var height = (emojiWidth + 2 * emojiPadding) * rows;
  var classes = useStyles({
    width: width,
    height: height
  });

  function renderEmoji() {
    return Object.keys(emoji.map).map(function (k) {
      var v = emoji.map[k];
      return /*#__PURE__*/React.createElement(Button, {
        style: {
          width: '35px',
          height: '35px',
          minHeight: '0',
          minWidth: '0'
        },
        key: k
      }, /*#__PURE__*/React.createElement("div", {
        style: {
          width: emojiWidth,
          height: emojiWidth,
          padding: emojiPadding
        }
      }, /*#__PURE__*/React.createElement("img", {
        src: require("../../../common/reactions/" + v)["default"],
        alt: k,
        width: emojiWidth,
        height: emojiWidth
      })));
    });
  }

  var handleEmojiClick = function handleEmojiClick(e) {
    var emoji = e.target.alt || e.target.children[0].alt;
    onSelected(emoji);
  };

  return /*#__PURE__*/React.createElement(Popover, {
    keepMounted: true,
    open: Boolean(anchorEl),
    onClose: onClose,
    anchorEl: anchorEl,
    style: {
      maxHeight: '500px'
    },
    anchorOrigin: {
      vertical: 'top',
      horizontal: 'left'
    },
    transformOrigin: {
      vertical: 'bottom',
      horizontal: 'left'
    },
    className: classes.myselfPopover
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.emojiBox,
    onClick: handleEmojiClick
  }, renderEmoji()));
}

export default memo(Emoji);