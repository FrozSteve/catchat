import React, { memo } from 'react';
import { makeStyles } from "@material-ui/styles";
import i18next from "i18next";
import { renderTime } from '../../../utils';
import videoDark from '../../../common/images/video_dark@2x.png';
import videoWhite from '../../../common/images/video_white@2x.png';
import audioDark from '../../../common/images/audio_dark@2x.png';
import audioWhite from '../../../common/images/audio_white@2x.png';
var useStyles = makeStyles(function (theme) {
  var _text;

  return {
    messageBox: {
      listStyle: 'none',
      marginTop: '26px',
      position: 'relative',
      alignItems: 'center',
      display: 'flex',
      width: '100%',
      height: '90px',
      flexDirection: function flexDirection(props) {
        return props.bySelf ? "row-reverse" : "row";
      }
    },
    text: (_text = {
      textAlign: 'center',
      color: 'rgba(1, 1, 0, 0.3)',
      fontSize: '12px',
      marginBottom: '26px',
      width: '229px'
    }, _text["color"] = 'rgba(1, 1, 0, 0.3)', _text["fontSize"] = '12px', _text["textAlign"] = 'center', _text.background = '#F2F2F2', _text.flexDirection = 'row', _text.height = '70px', _text.display = 'flex', _text.alignItems = 'center', _text.justifyContent = 'space-between', _text.padding = '10px', _text.boxSizing = 'border-box', _text.borderRadius = function borderRadius(props) {
      return props.bySelf ? "15px 15px 5px 15px" : "15px 15px 15px 5px";
    }, _text),
    textBox: {
      display: 'flex',
      flexDirection: 'column',
      height: '100%',
      justifyContent: 'space-between',
      paddingLeft: '2px',
      '& span:nth-child(1)': {
        fontSize: '16px',
        color: '#000',
        textAlign: 'left',
        lineHeight: '22px'
      },
      '& span:nth-child(2)': {
        fontSize: '14px',
        color: '#666666',
        textAlign: 'left',
        lineHeight: '18px'
      }
    },
    iconBox: {
      width: '50px',
      height: '50px',
      background: function background(props) {
        return props.ended ? '#fff' : '#00CE76';
      },
      borderRadius: '8px',
      '& img': {
        width: '100%'
      }
    },
    time: {
      position: 'absolute',
      fontSize: '11px',
      height: '16px',
      color: 'rgba(1, 1, 1, .2)',
      lineHeight: '16px',
      textAlign: 'center',
      top: '-18px',
      width: '100%'
    }
  };
});

function CustomMessage(_ref) {
  var message = _ref.message;
  console.log('message', message);
  var info = message.body.info || {};
  var icon = '';
  var ended = true;

  switch (info.type) {
    case 0:
    case 3:
      icon = audioDark;
      break;

    case 1:
    case 2:
      icon = videoDark;
      break;

    default:
      break;
  }

  if (info.action === 'invite') {
    if (info.type === 2) {
      icon = videoWhite;
    } else {
      icon = audioWhite;
    }

    ended = false;
  }

  var callType = info.type == 0 || info.type == 3 ? 'Audio Call' : 'Video Call';
  var classes = useStyles({
    bySelf: message.bySelf,
    ended: ended
  });
  var title = ended ? 'Call ended' : "" + callType;
  return /*#__PURE__*/React.createElement("li", {
    className: classes.messageBox
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.text
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.textBox
  }, /*#__PURE__*/React.createElement("span", null, title), /*#__PURE__*/React.createElement("span", null, info.duration || '00:00')), /*#__PURE__*/React.createElement("div", {
    className: classes.iconBox
  }, /*#__PURE__*/React.createElement("img", {
    src: icon,
    alt: ""
  }))), /*#__PURE__*/React.createElement("div", {
    className: classes.time
  }, renderTime(message.time)));
}

export default memo(CustomMessage);