import React, { useState, memo } from "react";
import { makeStyles } from "@material-ui/styles";
import { reactionEmoji, defaultReactions } from "../../../common/reactionEmoji";
import { Box, Button } from "@material-ui/core";
import Popover from "@material-ui/core/Popover";
import WebIM from "../../../utils/WebIM";
import store from "../../../redux/index";
import MessageActions from "../../../redux/message";
var useStyles = makeStyles(function (theme) {
  return {
    root: {
      width: "390px",
      height: "288px",
      maxHeight: "500px",
      borderRadius: "12px"
    },
    text: {
      fontFamily: "SF Compact Text",
      fontSize: "12px",
      fontStyle: "normal",
      fontWeight: "400",
      lineHeight: "20px",
      letterSpacing: "0px",
      textAlign: "left",
      color: "#999999",
      padding: "3px 8px"
    },
    emojiStyle: {
      height: "26px",
      width: "26px"
    },
    emojiItem: {
      display: "flex",
      alignItems: "center",
      justifyContent: "center",
      margin: "0 3px"
    },
    btnStyle: {
      width: "34px",
      height: "34px",
      minHeight: "0",
      minWidth: "0",
      borderRadius: "16px" // background:

    },
    clickStyle: {
      width: "34px",
      height: "34px",
      minHeight: "0",
      minWidth: "0",
      borderRadius: "16px",
      background: "#E6E6E6"
    },
    emojiBox: {
      width: function width(props) {
        return props.width + "px";
      },
      height: function height(props) {
        return props.height + "px";
      },
      display: "flex",
      flexWrap: "wrap",
      padding: "8px"
    },
    defaultEmojiBox: {
      width: function width(props) {
        return props.width + "px";
      },
      display: "flex",
      flexWrap: "wrap",
      padding: "8px"
    }
  };
});

var ReactionIcon = function ReactionIcon(_ref) {
  var anchorEl = _ref.anchorEl,
      onClose = _ref.onClose,
      onSelected = _ref.onSelected,
      message = _ref.message;
  var classes = useStyles();
  var reactionMsg = message.reactions || [];
  var currentLoginId = WebIM.conn.context.userId || "";
  var newStatus = {};

  var isStatus = function isStatus(v) {
    reactionMsg.length > 0 && reactionMsg.forEach(function (val) {
      var _reactionEmoji$map$re;

      var reaction = val.reaction,
          userList = val.userList,
          isAddedBySelf = val.isAddedBySelf;

      if (((_reactionEmoji$map$re = reactionEmoji.map[reaction]) === null || _reactionEmoji$map$re === void 0 ? void 0 : _reactionEmoji$map$re.includes(v)) && userList.includes(currentLoginId)) {
        newStatus[v] = isAddedBySelf;
      }
    });
    return newStatus[v];
  };

  var renderReactions = function renderReactions(type) {
    var renderType = type === "default";
    return Object.keys((renderType ? defaultReactions : reactionEmoji).map).map(function (k, i) {
      var v = reactionEmoji.map[k];

      var emojiSrc = require("../../../common/reactions/" + v)["default"];

      return /*#__PURE__*/React.createElement("div", {
        className: classes.emojiItem,
        key: i,
        onClick: isStatus(v) ? handleDelete : handleEmojiClick
      }, /*#__PURE__*/React.createElement(Button, {
        key: k,
        className: isStatus(v) ? classes.clickStyle : classes.btnStyle
      }, /*#__PURE__*/React.createElement("img", {
        src: emojiSrc,
        alt: k,
        className: classes.emojiStyle
      })));
    });
  };

  var handleEmojiClick = function handleEmojiClick(e) {
    var emoji = e.target.alt || e.target.children[0].alt;
    onSelected(emoji);
    onClose();
  };

  var handleDelete = function handleDelete(e) {
    var emoji = e.target.alt || e.target.children[0].alt;
    store.dispatch(MessageActions.deleteReaction(message, emoji));
    onClose();
  };

  return /*#__PURE__*/React.createElement(Popover, {
    keepMounted: true,
    open: Boolean(anchorEl),
    onClose: onClose,
    anchorEl: anchorEl,
    anchorOrigin: {
      vertical: "bottom",
      horizontal: "left"
    },
    transformOrigin: {
      vertical: "top",
      horizontal: "left"
    }
  }, /*#__PURE__*/React.createElement(Box, {
    className: classes.root
  }, /*#__PURE__*/React.createElement("div", {
    className: classes.text
  }, "Frequently"), /*#__PURE__*/React.createElement("div", {
    className: classes.defaultEmojiBox // onClick={handleEmojiClick}

  }, renderReactions("default")), /*#__PURE__*/React.createElement("hr", null), /*#__PURE__*/React.createElement("div", {
    className: classes.text
  }, "All Emojis"), /*#__PURE__*/React.createElement("div", {
    className: classes.emojiBox
  }, renderReactions("all"))));
};

export default memo(ReactionIcon);