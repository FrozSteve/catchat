import React, { useState, memo } from "react";
import rnReactionEmoji from "../../../utils/rnReactionEmoji";
import { makeStyles } from "@material-ui/styles";
import store from "../../../redux/index";
import MessageActions from "../../../redux/message";
import ReactionInfo from './reactionInfo';
var useStyles = makeStyles(function (theme) {
  return {
    reaction: {
      display: "flex",
      cursor: "pointer"
    },
    reactionItem: {
      height: "20px",
      width: "20px",
      marginLeft: function marginLeft(props) {
        return props.rnReaction ? "4px" : "";
      }
    },
    reactionLingth: {
      font: "SF Compact Text",
      fontWeight: "400",
      fontStyle: "normal",
      fontSize: "14px",
      lineHeight: "20px",
      textAlign: "Center",
      color: "#000000",
      marginLeft: "5px",
      width: "27px",
      height: "20px"
    }
  };
});

var RenderReactions = function RenderReactions(_ref) {
  var message = _ref.message;
  var reactionMsg = message.reactions || [];
  var classes = useStyles({
    rnReaction: reactionMsg.length > 1
  });

  var _useState = useState(false),
      reactionInfoVisible = _useState[0],
      setReactionInfoVisible = _useState[1];

  var handleDeleteReaction = function handleDeleteReaction(reaction) {
    store.dispatch(MessageActions.deleteReaction(message, reaction));
  };

  var handleReactionInfo = function handleReactionInfo(e) {
    setReactionInfoVisible(true);
  };

  var reactiontotalNum = reactionMsg.reduce(function (total, item) {
    return total + item.count;
  }, 0);
  return /*#__PURE__*/React.createElement("div", {
    className: classes.reaction
  }, /*#__PURE__*/React.createElement("span", {
    onClick: handleReactionInfo,
    style: {
      display: 'flex'
    }
  }, reactionMsg.map(function (item, i) {
    if (i > 3 && reactionMsg.length != 5) return;
    return /*#__PURE__*/React.createElement("div", {
      key: i,
      className: classes.reactionItem
    }, rnReactionEmoji(item.reaction));
  }), reactionMsg.length > 5 && /*#__PURE__*/React.createElement("span", {
    className: classes.reactionLingth
  }, "..."), reactiontotalNum > 1 && /*#__PURE__*/React.createElement("span", {
    className: classes.reactionLingth,
    style: {
      width: reactiontotalNum > 99 ? '30px' : '20px'
    }
  }, reactiontotalNum > 99 ? '99+' : reactiontotalNum)), /*#__PURE__*/React.createElement(ReactionInfo, {
    anchorEl: reactionInfoVisible,
    onClose: function onClose() {
      setReactionInfoVisible(false);
    },
    message: message
  }));
};

export default memo(RenderReactions);