import { createStore, applyMiddleware, combineReducers, compose } from "redux";
import { createLogger } from "redux-logger";
import thunk from "redux-thunk";
import { messageReducer } from "./message";
import { sessionReducer } from "./session";
import { globalPropsReducer } from "./globalProps";
import { threadReducer } from "./thread";
var logger = createLogger();
var rootReducer = combineReducers({
  global: globalPropsReducer,
  session: sessionReducer,
  message: messageReducer,
  thread: threadReducer
});
var middlewares = [thunk, logger];
var enhancers = [];
enhancers.push(applyMiddleware.apply(void 0, middlewares));

var resetReducer = function resetReducer(state, action) {
  if (action.type === 'LOGOUT') {
    state = undefined;
  }

  return rootReducer(state, action);
};

var uikit_store = createStore(resetReducer, compose.apply(void 0, enhancers));
window.uikit_store = uikit_store;
export default uikit_store;