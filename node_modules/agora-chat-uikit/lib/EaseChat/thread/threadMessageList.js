"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/styles");

require("../chat/index.css");

var _reactRedux = require("react-redux");

var _retractedMessage = _interopRequireDefault(require("../chat/messages/retractedMessage"));

var _fileMessage = _interopRequireDefault(require("../chat/messages/fileMessage"));

var _imageMessage = _interopRequireDefault(require("../chat/messages/imageMessage"));

var _audioOrVideoMessage = _interopRequireDefault(require("../chat/messages/audioOrVideoMessage"));

var _textMessage = _interopRequireDefault(require("../chat/messages/textMessage"));

var _i18next = _interopRequireDefault(require("i18next"));

var _message = _interopRequireDefault(require("../../redux/message"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    root: {
      width: "100%",
      flex: 1,
      display: "flex",
      position: "relative",
      bottom: "0",
      top: "0"
    },
    pulldownWrapper: {
      width: '100%',
      padding: ' 0 16px'
    }
  };
});

function ThreadMessageList(_ref) {
  var messageList = _ref.messageList,
      showByselfAvatar = _ref.showByselfAvatar;
  var classes = useStyles();
  var dispatch = (0, _reactRedux.useDispatch)();
  var handleRecallThreadMsg = (0, _react.useCallback)(function (message) {
    var to = message.to,
        chatType = message.chatType;
    dispatch(_message["default"].recallMessage(to, chatType, message, true));
  }, [dispatch]);
  return /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.root
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "pulldown-wrapper",
    style: {
      padding: '0'
    }
  }, /*#__PURE__*/_react["default"].createElement("div", {
    className: "pulldown-tips"
  }, /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement("span", {
    style: {
      fontSize: "12px"
    }
  }, _i18next["default"].t("no more messages")))), /*#__PURE__*/_react["default"].createElement("ul", {
    className: "pulldown-list"
  }, messageList.length ? messageList.map(function (msg, index) {
    if (msg.body.type === "txt") {
      return /*#__PURE__*/_react["default"].createElement(_textMessage["default"], {
        message: msg,
        key: msg.id + index,
        onRecallMessage: handleRecallThreadMsg,
        showByselfAvatar: showByselfAvatar,
        isThreadPanel: "true"
      });
    } else if (msg.body.type === "file") {
      return /*#__PURE__*/_react["default"].createElement(_fileMessage["default"], {
        message: msg,
        key: msg.id + index,
        onRecallMessage: handleRecallThreadMsg,
        showByselfAvatar: showByselfAvatar,
        isThreadPanel: "true"
      });
    } else if (msg.body.type === "img") {
      return /*#__PURE__*/_react["default"].createElement(_imageMessage["default"], {
        message: msg,
        key: msg.id + index,
        onRecallMessage: handleRecallThreadMsg,
        showByselfAvatar: showByselfAvatar,
        isThreadPanel: "true"
      });
    } else if (msg.body.type === "audio" || msg.body.type === "video") {
      return /*#__PURE__*/_react["default"].createElement(_audioOrVideoMessage["default"], {
        message: msg,
        key: msg.id + index,
        showByselfAvatar: showByselfAvatar,
        isThreadPanel: "true"
      });
    } else if (msg.body.type === "recall") {
      return /*#__PURE__*/_react["default"].createElement(_retractedMessage["default"], {
        message: msg,
        key: msg.id + index
      });
    } else {
      return null;
    }
  }) : null)));
}

var _default = (0, _react.memo)(ThreadMessageList);

exports["default"] = _default;
module.exports = exports.default;