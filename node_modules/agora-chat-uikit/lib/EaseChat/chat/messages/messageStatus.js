"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/styles");

var _core = require("@material-ui/core");

var _sent3x = _interopRequireDefault(require("../../../common/icons/sent@3x.png"));

var _failed3x = _interopRequireDefault(require("../../../common/icons/failed@3x.png"));

var _read3x = _interopRequireDefault(require("../../../common/icons/read@3x.png"));

var _received3x = _interopRequireDefault(require("../../../common/icons/received@3x.png"));

var _sending3x = _interopRequireDefault(require("../../../common/icons/sending@3x.png"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    MuiCircularProgressSvg: {
      width: "15px",
      height: "15px",
      color: "#e0e0e0",
      margin: "0 4px"
    },
    failIcon: {
      color: "red"
    },
    imgStyle: {
      height: "20px",
      marginRight: "5px"
    },
    rotate: {
      animation: "rotate 800ms infinite"
    },
    "@keyframes rotate": {
      "0%": {
        transform: "rotate(0deg)"
      },
      "100%": {
        transform: "rotate(360deg)"
      }
    },
    hoverStyle: {
      marginRight: "25px"
    }
  };
});

function SedndingStatus(_ref) {
  var status = _ref.status,
      _ref$style = _ref.style,
      style = _ref$style === void 0 ? {} : _ref$style,
      hoverReaction = _ref.hoverReaction;
  var classes = useStyles({
    hoverReaction: hoverReaction
  });
  var statusIcon = ''; // console.log('status>>',status);

  switch (status) {
    case 'sent':
      statusIcon = /*#__PURE__*/_react["default"].createElement("img", {
        src: !hoverReaction ? _sent3x["default"] : null,
        alt: "sent",
        className: classes.imgStyle
      });
      break;

    case 'sending':
      statusIcon = /*#__PURE__*/_react["default"].createElement("img", {
        src: !hoverReaction ? _sending3x["default"] : null,
        alt: "sent",
        className: classes.imgStyle + ' ' + classes.rotate
      });
      break;

    case 'received':
      statusIcon = /*#__PURE__*/_react["default"].createElement("img", {
        src: _received3x["default"],
        alt: "received",
        className: classes.imgStyle
      });
      break;

    case 'read':
      statusIcon = /*#__PURE__*/_react["default"].createElement("img", {
        src: _read3x["default"],
        alt: "read",
        className: classes.imgStyle
      });
      break;

    case 'fail':
      statusIcon = /*#__PURE__*/_react["default"].createElement("img", {
        src: _failed3x["default"],
        alt: "fail",
        className: classes.imgStyle
      });
      break;

    default:
      statusIcon = '';
      break;
  }

  return statusIcon;
}

var _default = (0, _react.memo)(SedndingStatus);

exports["default"] = _default;
module.exports = exports.default;