"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styles = require("@material-ui/styles");

var _index = _interopRequireDefault(require("../../../redux/index"));

var _message = _interopRequireDefault(require("../../../redux/message"));

var _renderReactionIcon = _interopRequireDefault(require("./renderReactionIcon"));

var _add_reaction2x = _interopRequireDefault(require("../../../common/icons/add_reaction@2x.png"));

var _core = require("@material-ui/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var useStyles = (0, _styles.makeStyles)(function (theme) {
  return {
    iconStyley: {
      height: "24px",
      width: "24px",
      cursor: "pointer"
    },
    conatiner: {
      height: "24px",
      width: "24px",
      "float": function float(props) {
        return props.bySelf ? 'right' : 'left';
      },
      borderRadius: '50%',
      '&:hover': {
        background: '#E6E6E6'
      }
    },
    reactionTooltip: {
      background: '#fff',
      color: 'rgba(0, 0, 0, 0.87)',
      boxShadow: '6px 6px 12px rgba(0, 0, 0, 0.12), -2px 0px 8px rgba(0, 0, 0, 0.08)'
    }
  };
});

var Reaction = function Reaction(_ref) {
  var message = _ref.message;
  var classes = useStyles({});

  var _useState = (0, _react.useState)(null),
      reactionVisible = _useState[0],
      setReactionVisible = _useState[1];

  var handleClickEmoji = function handleClickEmoji(e) {
    setReactionVisible(e.currentTarget);
  };

  var handleEmojiClose = function handleEmojiClose() {
    setReactionVisible(null);
  };

  var handleEmojiSelected = function handleEmojiSelected(emoji) {
    if (!emoji) return;
    console.log('>>> handleEomji');

    _index["default"].dispatch(_message["default"].addReactions(message, emoji));
  };

  return /*#__PURE__*/_react["default"].createElement("div", {
    className: classes.conatiner
  }, /*#__PURE__*/_react["default"].createElement(_core.Tooltip, {
    title: "Add Reactions",
    placement: "top",
    classes: {
      tooltip: classes.reactionTooltip
    }
  }, /*#__PURE__*/_react["default"].createElement("img", {
    src: _add_reaction2x["default"],
    alt: "reaction",
    className: classes.iconStyley,
    onClick: handleClickEmoji
  })), /*#__PURE__*/_react["default"].createElement(_renderReactionIcon["default"], {
    anchorEl: reactionVisible,
    onSelected: handleEmojiSelected,
    onClose: handleEmojiClose,
    message: message
  }));
};

var _default = (0, _react.memo)(Reaction);

exports["default"] = _default;
module.exports = exports.default;