"use strict";

exports.__esModule = true;
exports["default"] = AlertDialogSlide;

var _react = _interopRequireDefault(require("react"));

var _Dialog = _interopRequireDefault(require("@material-ui/core/Dialog"));

var _styles = require("@material-ui/core/styles");

var _DialogContent = _interopRequireDefault(require("@material-ui/core/DialogContent"));

var _DialogTitle = _interopRequireDefault(require("@material-ui/core/DialogTitle"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var _IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var _Close = _interopRequireDefault(require("@material-ui/icons/Close"));

var _Slide = _interopRequireDefault(require("@material-ui/core/Slide"));

var _excluded = ["children", "classes", "onClose"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Transition = _react["default"].forwardRef(function Transition(props, ref) {
  return /*#__PURE__*/_react["default"].createElement(_Slide["default"], _extends({
    direction: "up",
    ref: ref
  }, props));
});

var styles = function styles(theme) {
  return {
    root: {
      margin: 0,
      padding: theme.spacing(2)
    },
    closeButton: {
      position: 'absolute',
      right: theme.spacing(1),
      top: theme.spacing(1),
      color: theme.palette.grey[500]
    }
  };
};

var DialogTitle = (0, _styles.withStyles)(styles)(function (props) {
  var children = props.children,
      classes = props.classes,
      onClose = props.onClose,
      other = _objectWithoutPropertiesLoose(props, _excluded);

  return /*#__PURE__*/_react["default"].createElement(_DialogTitle["default"], _extends({
    disableTypography: true,
    className: classes.root
  }, other), /*#__PURE__*/_react["default"].createElement(_Typography["default"], {
    variant: "h6"
  }, children), onClose ? /*#__PURE__*/_react["default"].createElement(_IconButton["default"], {
    "aria-label": "close",
    className: classes.closeButton,
    onClick: onClose
  }, /*#__PURE__*/_react["default"].createElement(_Close["default"], null)) : null);
});

function AlertDialogSlide(_ref) {
  var open = _ref.open,
      title = _ref.title,
      content = _ref.content,
      onClose = _ref.onClose,
      footer = _ref.footer,
      maxWidth = _ref.maxWidth;
  return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_Dialog["default"], {
    open: open,
    TransitionComponent: Transition,
    keepMounted: true,
    onClose: onClose,
    "aria-labelledby": "alert-dialog-slide-title",
    "aria-describedby": "alert-dialog-slide-description",
    fullWidth: false,
    maxWidth: maxWidth
  }, title ? /*#__PURE__*/_react["default"].createElement(DialogTitle, {
    id: "alert-dialog-slide-title",
    onClose: onClose
  }, title) : null, /*#__PURE__*/_react["default"].createElement(_DialogContent["default"], {
    dividers: true,
    style: {
      padding: '0',
      borderBottom: 'none'
    }
  }, content), footer ? footer : null));
}

module.exports = exports.default;